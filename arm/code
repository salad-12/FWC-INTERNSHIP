#include "main.h"

int A;

void SystemClock_Config(void);
static void MX_GPIO_Init(void);

int main(void)
{
  HAL_Init();
  SystemClock_Config();
  MX_GPIO_Init();

  while (1)
  {
    // Read the inputs from the pins
    int D3 = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3); // Assuming D3 is connected to PA3
    int D2 = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_4); // Assuming D2 is connected to PA4
    int D1 = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5); // Assuming D1 is connected to PA5

    // Calculate A based on inputs
    A = (!D3 && D2) || (!D3 && !D2);
    
    // Output A directly to PA2 (corresponding to your pin 2 in Arduino)
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, A ? GPIO_PIN_SET : GPIO_PIN_RESET);

    HAL_Delay(500); // 500 ms delay
  }
}

// GPIO Initialization Function
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};

  // GPIO Ports Clock Enable
  __HAL_RCC_GPIOA_CLK_ENABLE();

  // Configure GPIO pin Output Level
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_RESET);

  // Configure GPIO pin : PA2 (output pin)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);

  // Configure GPIO pins : PA3 PA4 PA5 (input pins)
  GPIO_InitStruct.Pin = GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5;
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
}

// System Clock Configuration (default for your board)
void SystemClock_Config(void)
{
  // Your board-specific system clock configuration
}
